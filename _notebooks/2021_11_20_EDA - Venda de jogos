{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "EDA - Venda de jogos.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Vinicius-L-R-Matos/-Repositorio-DS/blob/master/_notebooks/2021_11_20_EDA%20-%20Venda%20de%20jogos\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LBnGa6DR5HX6"
      },
      "source": [
        "# EDA - Venda de jogos\n",
        ">\"Uma contribuição para análise de venda de jogos\"\n",
        "\n",
        "Abaixo Documentações Libs Gráficos:\n",
        "\n",
        "- [Matplotlib](https://matplotlib.org/stable/tutorials/index.html#introductory)\n",
        "- [Seaborn](https://seaborn.pydata.org/tutorial.html)\n",
        "\n",
        "Opções de EDA:\n",
        "\n",
        "[Predict Sales](https://www.kaggle.com/c/competitive-data-science-predict-future-sales/data?select=sales_train.csv)\n",
        "\n",
        "[PUGB Finish Predict](https://www.kaggle.com/c/pubg-finish-placement-prediction/data)\n",
        "\n",
        "[Predict Price](https://www.kaggle.com/c/mercari-price-suggestion-challenge/data?select=train.tsv.7z)\n",
        "\n",
        "[Netflix Dataset](https://www.kaggle.com/shivamb/netflix-shows)\n",
        "\n",
        "\n",
        "[Predict Imdb Rate](https://www.kaggle.com/stefanoleone992/imdb-extensive-dataset?select=IMDb+ratings.csv)\n",
        "\n",
        "## Desafio Escolhido\n",
        "\n",
        "[Video Game Sales](https://www.kaggle.com/gregorut/videogamesales)\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "NHEQ6klz9Gpy"
      },
      "source": [
        "## Posiveis Perguntas\n",
        "\n",
        "******\n",
        "\n",
        "- Qual o jogo mais vendido por região/Genero/Plataforma ? OK\n",
        "- Jogo infantil vende mais do que adultos/Cultura do Pais também influência ? - Procurar base para join com classificação \n",
        "- Jogos exclusivos vendem mais ? OK\n",
        "- Concorrencia entre exclusivos (Principais Fabricantes Video Game)?\n",
        "- Produtora que mais vende e mais jogos ? \n",
        "Venda por jogo ? Ok\n",
        "- Será que a os NA indicam o comportamento do resto do mundo ? OK\n",
        "- Há anos com mais vendas de jogos ? OK\n",
        "- Genero por Região ? OK\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ByqaPu9CD1Gr",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1af7dd7d-0ace-4d27-ab13-54d31bd89e81"
      },
      "source": [
        "!pip install -U seaborn"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: seaborn in /usr/local/lib/python3.7/dist-packages (0.11.2)\n",
            "Requirement already satisfied: scipy>=1.0 in /usr/local/lib/python3.7/dist-packages (from seaborn) (1.4.1)\n",
            "Requirement already satisfied: numpy>=1.15 in /usr/local/lib/python3.7/dist-packages (from seaborn) (1.19.5)\n",
            "Requirement already satisfied: pandas>=0.23 in /usr/local/lib/python3.7/dist-packages (from seaborn) (1.1.5)\n",
            "Requirement already satisfied: matplotlib>=2.2 in /usr/local/lib/python3.7/dist-packages (from seaborn) (3.2.2)\n",
            "Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=2.2->seaborn) (3.0.6)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=2.2->seaborn) (1.3.2)\n",
            "Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=2.2->seaborn) (2.8.2)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=2.2->seaborn) (0.11.0)\n",
            "Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.23->seaborn) (2018.9)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.1->matplotlib>=2.2->seaborn) (1.15.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZhVNYWkqCDCE"
      },
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np"
      ],
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fbbtZ37ayHCg"
      },
      "source": [
        "## ref - https://pythonguides.com/what-is-matplotlib-inline/\n",
        "%matplotlib inline"
      ],
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "56gTWZmuqqyi"
      },
      "source": [
        "#statistics lib\n",
        "from scipy import stats"
      ],
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ivkbP69p3CCm"
      },
      "source": [
        "df = pd.read_csv('vgsales.csv')"
      ],
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oG0RQi7T3Nlw"
      },
      "source": [
        "## Inspect "
      ],
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lIHDI1aJ3QZF",
        "outputId": "4fff8174-b593-421b-9092-424c5a7659e6"
      },
      "source": [
        "df.shape"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(16598, 11)"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LIX4vt8P3apO",
        "outputId": "7af80ac7-cdd0-43b6-d67c-6dea1d341b45"
      },
      "source": [
        "df.info()"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 16598 entries, 0 to 16597\n",
            "Data columns (total 11 columns):\n",
            " #   Column        Non-Null Count  Dtype  \n",
            "---  ------        --------------  -----  \n",
            " 0   Rank          16598 non-null  int64  \n",
            " 1   Name          16598 non-null  object \n",
            " 2   Platform      16598 non-null  object \n",
            " 3   Year          16327 non-null  float64\n",
            " 4   Genre         16598 non-null  object \n",
            " 5   Publisher     16540 non-null  object \n",
            " 6   NA_Sales      16598 non-null  float64\n",
            " 7   EU_Sales      16598 non-null  float64\n",
            " 8   JP_Sales      16598 non-null  float64\n",
            " 9   Other_Sales   16598 non-null  float64\n",
            " 10  Global_Sales  16598 non-null  float64\n",
            "dtypes: float64(6), int64(1), object(4)\n",
            "memory usage: 1.4+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 224
        },
        "id": "wOAO5Y4f3egd",
        "outputId": "293da600-fcd9-45c9-ae51-5bae7b5a5f69"
      },
      "source": [
        "df.head()"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rank</th>\n",
              "      <th>Name</th>\n",
              "      <th>Platform</th>\n",
              "      <th>Year</th>\n",
              "      <th>Genre</th>\n",
              "      <th>Publisher</th>\n",
              "      <th>NA_Sales</th>\n",
              "      <th>EU_Sales</th>\n",
              "      <th>JP_Sales</th>\n",
              "      <th>Other_Sales</th>\n",
              "      <th>Global_Sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Wii Sports</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2006.0</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>41.49</td>\n",
              "      <td>29.02</td>\n",
              "      <td>3.77</td>\n",
              "      <td>8.46</td>\n",
              "      <td>82.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Super Mario Bros.</td>\n",
              "      <td>NES</td>\n",
              "      <td>1985.0</td>\n",
              "      <td>Platform</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>29.08</td>\n",
              "      <td>3.58</td>\n",
              "      <td>6.81</td>\n",
              "      <td>0.77</td>\n",
              "      <td>40.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Mario Kart Wii</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2008.0</td>\n",
              "      <td>Racing</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>15.85</td>\n",
              "      <td>12.88</td>\n",
              "      <td>3.79</td>\n",
              "      <td>3.31</td>\n",
              "      <td>35.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Wii Sports Resort</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2009.0</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>15.75</td>\n",
              "      <td>11.01</td>\n",
              "      <td>3.28</td>\n",
              "      <td>2.96</td>\n",
              "      <td>33.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Pokemon Red/Pokemon Blue</td>\n",
              "      <td>GB</td>\n",
              "      <td>1996.0</td>\n",
              "      <td>Role-Playing</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>11.27</td>\n",
              "      <td>8.89</td>\n",
              "      <td>10.22</td>\n",
              "      <td>1.00</td>\n",
              "      <td>31.37</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Rank                      Name Platform  ...  JP_Sales Other_Sales Global_Sales\n",
              "0     1                Wii Sports      Wii  ...      3.77        8.46        82.74\n",
              "1     2         Super Mario Bros.      NES  ...      6.81        0.77        40.24\n",
              "2     3            Mario Kart Wii      Wii  ...      3.79        3.31        35.82\n",
              "3     4         Wii Sports Resort      Wii  ...      3.28        2.96        33.00\n",
              "4     5  Pokemon Red/Pokemon Blue       GB  ...     10.22        1.00        31.37\n",
              "\n",
              "[5 rows x 11 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-8gzK-It34TT",
        "outputId": "3a82dfe3-2786-4d4a-d62b-60f36d1b3237"
      },
      "source": [
        "df.isna().sum()/df.shape[0]"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Rank            0.000000\n",
              "Name            0.000000\n",
              "Platform        0.000000\n",
              "Year            0.016327\n",
              "Genre           0.000000\n",
              "Publisher       0.003494\n",
              "NA_Sales        0.000000\n",
              "EU_Sales        0.000000\n",
              "JP_Sales        0.000000\n",
              "Other_Sales     0.000000\n",
              "Global_Sales    0.000000\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "h2RhcmPs5-96",
        "outputId": "c6243d9a-0a1b-40f8-a146-3497f007f100"
      },
      "source": [
        "df.columns.str.lower()"
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['rank', 'name', 'platform', 'year', 'genre', 'publisher', 'na_sales',\n",
              "       'eu_sales', 'jp_sales', 'other_sales', 'global_sales'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hRamjCWv534I"
      },
      "source": [
        "columns_renamed = {\n",
        "    'Rank': 'rank', \n",
        "    'Name': 'name', \n",
        "    'Platform': 'platform', \n",
        "    'Year': 'year', \n",
        "    'Genre': 'genre',\n",
        "    'Publisher': 'publisher', \n",
        "    'NA_Sales': 'na_sales',\n",
        "    'EU_Sales': 'eu_sales', \n",
        "    'JP_Sales': 'jp_sales', \n",
        "    'Other_Sales': 'other_sales', \n",
        "    'Global_Sales': 'global_sales'\n",
        "}\n",
        "df.rename(columns=columns_renamed, inplace=True)"
      ],
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 615
        },
        "id": "zMozQnVD4Pyv",
        "outputId": "f034d250-b29a-4413-960b-c32d45598728"
      },
      "source": [
        "df[df.year.isna()]"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>rank</th>\n",
              "      <th>name</th>\n",
              "      <th>platform</th>\n",
              "      <th>year</th>\n",
              "      <th>genre</th>\n",
              "      <th>publisher</th>\n",
              "      <th>na_sales</th>\n",
              "      <th>eu_sales</th>\n",
              "      <th>jp_sales</th>\n",
              "      <th>other_sales</th>\n",
              "      <th>global_sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>179</th>\n",
              "      <td>180</td>\n",
              "      <td>Madden NFL 2004</td>\n",
              "      <td>PS2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Electronic Arts</td>\n",
              "      <td>4.26</td>\n",
              "      <td>0.26</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.71</td>\n",
              "      <td>5.23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>377</th>\n",
              "      <td>378</td>\n",
              "      <td>FIFA Soccer 2004</td>\n",
              "      <td>PS2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Electronic Arts</td>\n",
              "      <td>0.59</td>\n",
              "      <td>2.36</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.51</td>\n",
              "      <td>3.49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>431</th>\n",
              "      <td>432</td>\n",
              "      <td>LEGO Batman: The Videogame</td>\n",
              "      <td>Wii</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Action</td>\n",
              "      <td>Warner Bros. Interactive Entertainment</td>\n",
              "      <td>1.86</td>\n",
              "      <td>1.02</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.29</td>\n",
              "      <td>3.17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>470</th>\n",
              "      <td>471</td>\n",
              "      <td>wwe Smackdown vs. Raw 2006</td>\n",
              "      <td>PS2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Fighting</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.57</td>\n",
              "      <td>1.02</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.41</td>\n",
              "      <td>3.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>607</th>\n",
              "      <td>608</td>\n",
              "      <td>Space Invaders</td>\n",
              "      <td>2600</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Shooter</td>\n",
              "      <td>Atari</td>\n",
              "      <td>2.36</td>\n",
              "      <td>0.14</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.03</td>\n",
              "      <td>2.53</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16307</th>\n",
              "      <td>16310</td>\n",
              "      <td>Freaky Flyers</td>\n",
              "      <td>GC</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Racing</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16327</th>\n",
              "      <td>16330</td>\n",
              "      <td>Inversion</td>\n",
              "      <td>PC</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Shooter</td>\n",
              "      <td>Namco Bandai Games</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16366</th>\n",
              "      <td>16369</td>\n",
              "      <td>Hakuouki: Shinsengumi Kitan</td>\n",
              "      <td>PS3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Adventure</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16427</th>\n",
              "      <td>16430</td>\n",
              "      <td>Virtua Quest</td>\n",
              "      <td>GC</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Role-Playing</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16493</th>\n",
              "      <td>16496</td>\n",
              "      <td>The Smurfs</td>\n",
              "      <td>3DS</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Action</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>271 rows × 11 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        rank                         name  ... other_sales  global_sales\n",
              "179      180              Madden NFL 2004  ...        0.71          5.23\n",
              "377      378             FIFA Soccer 2004  ...        0.51          3.49\n",
              "431      432   LEGO Batman: The Videogame  ...        0.29          3.17\n",
              "470      471   wwe Smackdown vs. Raw 2006  ...        0.41          3.00\n",
              "607      608               Space Invaders  ...        0.03          2.53\n",
              "...      ...                          ...  ...         ...           ...\n",
              "16307  16310                Freaky Flyers  ...        0.00          0.01\n",
              "16327  16330                    Inversion  ...        0.00          0.01\n",
              "16366  16369  Hakuouki: Shinsengumi Kitan  ...        0.00          0.01\n",
              "16427  16430                 Virtua Quest  ...        0.00          0.01\n",
              "16493  16496                   The Smurfs  ...        0.00          0.01\n",
              "\n",
              "[271 rows x 11 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "lUt1HMS451hW",
        "outputId": "23ca9a54-4bbc-42aa-f4bc-ecca9970dcda"
      },
      "source": [
        "df[df.publisher.isna()]"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>rank</th>\n",
              "      <th>name</th>\n",
              "      <th>platform</th>\n",
              "      <th>year</th>\n",
              "      <th>genre</th>\n",
              "      <th>publisher</th>\n",
              "      <th>na_sales</th>\n",
              "      <th>eu_sales</th>\n",
              "      <th>jp_sales</th>\n",
              "      <th>other_sales</th>\n",
              "      <th>global_sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>470</th>\n",
              "      <td>471</td>\n",
              "      <td>wwe Smackdown vs. Raw 2006</td>\n",
              "      <td>PS2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Fighting</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.57</td>\n",
              "      <td>1.02</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.41</td>\n",
              "      <td>3.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1303</th>\n",
              "      <td>1305</td>\n",
              "      <td>Triple Play 99</td>\n",
              "      <td>PS</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Sports</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.81</td>\n",
              "      <td>0.55</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.10</td>\n",
              "      <td>1.46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1662</th>\n",
              "      <td>1664</td>\n",
              "      <td>Shrek / Shrek 2 2-in-1 Gameboy Advance Video</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2007.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.87</td>\n",
              "      <td>0.32</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "      <td>1.21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2222</th>\n",
              "      <td>2224</td>\n",
              "      <td>Bentley's Hackpack</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2005.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.67</td>\n",
              "      <td>0.25</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3159</th>\n",
              "      <td>3161</td>\n",
              "      <td>Nicktoons Collection: Game Boy Advance Video V...</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.46</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3166</th>\n",
              "      <td>3168</td>\n",
              "      <td>SpongeBob SquarePants: Game Boy Advance Video ...</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.46</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3766</th>\n",
              "      <td>3768</td>\n",
              "      <td>SpongeBob SquarePants: Game Boy Advance Video ...</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.38</td>\n",
              "      <td>0.14</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.53</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4145</th>\n",
              "      <td>4147</td>\n",
              "      <td>Sonic the Hedgehog</td>\n",
              "      <td>PS3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Platform</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.48</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4526</th>\n",
              "      <td>4528</td>\n",
              "      <td>The Fairly Odd Parents: Game Boy Advance Video...</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.31</td>\n",
              "      <td>0.11</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.43</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4635</th>\n",
              "      <td>4637</td>\n",
              "      <td>The Fairly Odd Parents: Game Boy Advance Video...</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.30</td>\n",
              "      <td>0.11</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5302</th>\n",
              "      <td>5304</td>\n",
              "      <td>Dragon Ball Z: Budokai Tenkaichi 2 (JP sales)</td>\n",
              "      <td>Wii</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Action</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0.05</td>\n",
              "      <td>0.14</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5647</th>\n",
              "      <td>5649</td>\n",
              "      <td>Cartoon Network Collection: Game Boy Advance V...</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2005.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.23</td>\n",
              "      <td>0.08</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6272</th>\n",
              "      <td>6274</td>\n",
              "      <td>The Legend of Zelda: The Minish Cap(weekly JP ...</td>\n",
              "      <td>GBA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Action</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.27</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6437</th>\n",
              "      <td>6439</td>\n",
              "      <td>Sonic X: Game Boy Advance Video Volume 1</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.19</td>\n",
              "      <td>0.07</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6562</th>\n",
              "      <td>6564</td>\n",
              "      <td>Dora the Explorer: Game Boy Advance Video Volu...</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.07</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6648</th>\n",
              "      <td>6650</td>\n",
              "      <td>Cartoon Network Collection: Game Boy Advance V...</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.07</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6849</th>\n",
              "      <td>6851</td>\n",
              "      <td>All Grown Up!: Game Boy Advance Video Volume 1</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.06</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7208</th>\n",
              "      <td>7210</td>\n",
              "      <td>Nicktoons Collection: Game Boy Advance Video V...</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.16</td>\n",
              "      <td>0.06</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7351</th>\n",
              "      <td>7353</td>\n",
              "      <td>Yu Yu Hakusho: Dark Tournament</td>\n",
              "      <td>PS2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Fighting</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.08</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.03</td>\n",
              "      <td>0.21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7470</th>\n",
              "      <td>7472</td>\n",
              "      <td>SpongeBob SquarePants: Game Boy Advance Video ...</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0.05</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7953</th>\n",
              "      <td>7955</td>\n",
              "      <td>Thomas the Tank Engine &amp; Friends</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Adventure</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.13</td>\n",
              "      <td>0.05</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8330</th>\n",
              "      <td>8332</td>\n",
              "      <td>Dragon Ball GT: Game Boy Advance Video Volume 1</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.12</td>\n",
              "      <td>0.05</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8341</th>\n",
              "      <td>8343</td>\n",
              "      <td>Codename: Kids Next Door: Game Boy Advance Vid...</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.12</td>\n",
              "      <td>0.05</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8368</th>\n",
              "      <td>8370</td>\n",
              "      <td>Teenage Mutant Ninja Turtles: Game Boy Advance...</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.12</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8503</th>\n",
              "      <td>8505</td>\n",
              "      <td>Stronghold 3</td>\n",
              "      <td>PC</td>\n",
              "      <td>2011.0</td>\n",
              "      <td>Strategy</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.06</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8770</th>\n",
              "      <td>8772</td>\n",
              "      <td>Cartoon Network Collection: Game Boy Advance V...</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2005.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.11</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8848</th>\n",
              "      <td>8850</td>\n",
              "      <td>Pokémon: Johto Photo Finish: Game Boy Advance ...</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.11</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8896</th>\n",
              "      <td>8898</td>\n",
              "      <td>Strawberry Shortcake: Game Boy Advance Video V...</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.11</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9517</th>\n",
              "      <td>9519</td>\n",
              "      <td>Farming Simulator 2011</td>\n",
              "      <td>PC</td>\n",
              "      <td>2010.0</td>\n",
              "      <td>Simulation</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.13</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9749</th>\n",
              "      <td>9751</td>\n",
              "      <td>Super Robot Wars OG Saga: Masou Kishin II - Re...</td>\n",
              "      <td>PSP</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Strategy</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.12</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10382</th>\n",
              "      <td>10384</td>\n",
              "      <td>Disney Channel Collection Vol. 1</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.08</td>\n",
              "      <td>0.03</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10494</th>\n",
              "      <td>10496</td>\n",
              "      <td>Atsumare! Power Pro Kun no DS Koushien</td>\n",
              "      <td>DS</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Sports</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11076</th>\n",
              "      <td>11078</td>\n",
              "      <td>Action Man-Operation Extreme</td>\n",
              "      <td>PS</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Action</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.05</td>\n",
              "      <td>0.03</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11526</th>\n",
              "      <td>11528</td>\n",
              "      <td>Cartoon Network Collection: Game Boy Advance V...</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.06</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12487</th>\n",
              "      <td>12489</td>\n",
              "      <td>Chou Soujuu Mecha MG</td>\n",
              "      <td>DS</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Simulation</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.06</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12517</th>\n",
              "      <td>12519</td>\n",
              "      <td>Prinny: Can I Really Be The Hero? (US sales)</td>\n",
              "      <td>PSP</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Action</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.06</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13278</th>\n",
              "      <td>13280</td>\n",
              "      <td>Monster Hunter Frontier Online</td>\n",
              "      <td>PS3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Role-Playing</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.05</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13672</th>\n",
              "      <td>13674</td>\n",
              "      <td>B.L.U.E.: Legend of Water</td>\n",
              "      <td>PS</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Adventure</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13962</th>\n",
              "      <td>13964</td>\n",
              "      <td>World of Tanks</td>\n",
              "      <td>X360</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Shooter</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.03</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14087</th>\n",
              "      <td>14089</td>\n",
              "      <td>Housekeeping</td>\n",
              "      <td>DS</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Action</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14296</th>\n",
              "      <td>14299</td>\n",
              "      <td>Bikkuriman Daijiten</td>\n",
              "      <td>DS</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.03</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14311</th>\n",
              "      <td>14314</td>\n",
              "      <td>Silverlicious</td>\n",
              "      <td>DS</td>\n",
              "      <td>2012.0</td>\n",
              "      <td>Action</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.03</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14698</th>\n",
              "      <td>14701</td>\n",
              "      <td>UK Truck Simulator</td>\n",
              "      <td>PC</td>\n",
              "      <td>2010.0</td>\n",
              "      <td>Simulation</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.03</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14942</th>\n",
              "      <td>14945</td>\n",
              "      <td>Umineko no Naku Koro ni San: Shinjitsu to Gens...</td>\n",
              "      <td>PS3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Adventure</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15056</th>\n",
              "      <td>15059</td>\n",
              "      <td>Xia-Xia</td>\n",
              "      <td>DS</td>\n",
              "      <td>2012.0</td>\n",
              "      <td>Platform</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15261</th>\n",
              "      <td>15264</td>\n",
              "      <td>Mario Tennis</td>\n",
              "      <td>3DS</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Sports</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15325</th>\n",
              "      <td>15328</td>\n",
              "      <td>Nicktoons Collection: Game Boy Advance Video V...</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2005.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15353</th>\n",
              "      <td>15356</td>\n",
              "      <td>Demolition Company: Gold Edition</td>\n",
              "      <td>PC</td>\n",
              "      <td>2011.0</td>\n",
              "      <td>Simulation</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15788</th>\n",
              "      <td>15791</td>\n",
              "      <td>Moshi, Kono Sekai ni Kami-sama ga Iru to suru ...</td>\n",
              "      <td>PSV</td>\n",
              "      <td>2016.0</td>\n",
              "      <td>Adventure</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15915</th>\n",
              "      <td>15918</td>\n",
              "      <td>Dream Dancer</td>\n",
              "      <td>DS</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16191</th>\n",
              "      <td>16194</td>\n",
              "      <td>Homeworld Remastered Collection</td>\n",
              "      <td>PC</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Strategy</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16198</th>\n",
              "      <td>16201</td>\n",
              "      <td>AKB1/48: Idol to Guam de Koishitara...</td>\n",
              "      <td>X360</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16208</th>\n",
              "      <td>16211</td>\n",
              "      <td>Super Robot Monkey Team: Game Boy Advance Vide...</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2005.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16229</th>\n",
              "      <td>16232</td>\n",
              "      <td>Brothers in Arms: Furious 4</td>\n",
              "      <td>X360</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Shooter</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16367</th>\n",
              "      <td>16370</td>\n",
              "      <td>Dance with Devils</td>\n",
              "      <td>PSV</td>\n",
              "      <td>2016.0</td>\n",
              "      <td>Action</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16494</th>\n",
              "      <td>16497</td>\n",
              "      <td>Legends of Oz: Dorothy's Return</td>\n",
              "      <td>3DS</td>\n",
              "      <td>2014.0</td>\n",
              "      <td>Puzzle</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16543</th>\n",
              "      <td>16546</td>\n",
              "      <td>Driving Simulator 2011</td>\n",
              "      <td>PC</td>\n",
              "      <td>2011.0</td>\n",
              "      <td>Racing</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16553</th>\n",
              "      <td>16556</td>\n",
              "      <td>Bound By Flame</td>\n",
              "      <td>X360</td>\n",
              "      <td>2014.0</td>\n",
              "      <td>Role-Playing</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        rank  ... global_sales\n",
              "470      471  ...         3.00\n",
              "1303    1305  ...         1.46\n",
              "1662    1664  ...         1.21\n",
              "2222    2224  ...         0.93\n",
              "3159    3161  ...         0.64\n",
              "3166    3168  ...         0.64\n",
              "3766    3768  ...         0.53\n",
              "4145    4147  ...         0.48\n",
              "4526    4528  ...         0.43\n",
              "4635    4637  ...         0.42\n",
              "5302    5304  ...         0.35\n",
              "5647    5649  ...         0.32\n",
              "6272    6274  ...         0.27\n",
              "6437    6439  ...         0.27\n",
              "6562    6564  ...         0.26\n",
              "6648    6650  ...         0.25\n",
              "6849    6851  ...         0.24\n",
              "7208    7210  ...         0.22\n",
              "7351    7353  ...         0.21\n",
              "7470    7472  ...         0.21\n",
              "7953    7955  ...         0.19\n",
              "8330    8332  ...         0.17\n",
              "8341    8343  ...         0.17\n",
              "8368    8370  ...         0.17\n",
              "8503    8505  ...         0.16\n",
              "8770    8772  ...         0.15\n",
              "8848    8850  ...         0.15\n",
              "8896    8898  ...         0.15\n",
              "9517    9519  ...         0.13\n",
              "9749    9751  ...         0.12\n",
              "10382  10384  ...         0.11\n",
              "10494  10496  ...         0.10\n",
              "11076  11078  ...         0.09\n",
              "11526  11528  ...         0.08\n",
              "12487  12489  ...         0.06\n",
              "12517  12519  ...         0.06\n",
              "13278  13280  ...         0.05\n",
              "13672  13674  ...         0.04\n",
              "13962  13964  ...         0.04\n",
              "14087  14089  ...         0.04\n",
              "14296  14299  ...         0.03\n",
              "14311  14314  ...         0.03\n",
              "14698  14701  ...         0.03\n",
              "14942  14945  ...         0.02\n",
              "15056  15059  ...         0.02\n",
              "15261  15264  ...         0.02\n",
              "15325  15328  ...         0.02\n",
              "15353  15356  ...         0.02\n",
              "15788  15791  ...         0.02\n",
              "15915  15918  ...         0.02\n",
              "16191  16194  ...         0.01\n",
              "16198  16201  ...         0.01\n",
              "16208  16211  ...         0.01\n",
              "16229  16232  ...         0.01\n",
              "16367  16370  ...         0.01\n",
              "16494  16497  ...         0.01\n",
              "16543  16546  ...         0.01\n",
              "16553  16556  ...         0.01\n",
              "\n",
              "[58 rows x 11 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pcvl2cSz5wXa"
      },
      "source": [
        "df.dropna(inplace=True)"
      ],
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "r0NFXhTa3mAl"
      },
      "source": [
        "df.year =df.year.astype(int)"
      ],
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3NRhktd53wjX",
        "outputId": "844771dd-a7da-41d0-dfc3-0206748c63f5"
      },
      "source": [
        "df.shape"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(16291, 11)"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DKqB2FQk68c0",
        "outputId": "d8ad8950-2ebf-4f40-a6ab-4bb980493faa"
      },
      "source": [
        "df[df.duplicated()].count()"
      ],
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "rank            0\n",
              "name            0\n",
              "platform        0\n",
              "year            0\n",
              "genre           0\n",
              "publisher       0\n",
              "na_sales        0\n",
              "eu_sales        0\n",
              "jp_sales        0\n",
              "other_sales     0\n",
              "global_sales    0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GAQ05Bnj7U9H",
        "outputId": "480d1bbc-0e79-4ee5-9a22-01f3a83f2bad"
      },
      "source": [
        "df.info()"
      ],
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 16291 entries, 0 to 16597\n",
            "Data columns (total 11 columns):\n",
            " #   Column        Non-Null Count  Dtype  \n",
            "---  ------        --------------  -----  \n",
            " 0   rank          16291 non-null  int64  \n",
            " 1   name          16291 non-null  object \n",
            " 2   platform      16291 non-null  object \n",
            " 3   year          16291 non-null  int64  \n",
            " 4   genre         16291 non-null  object \n",
            " 5   publisher     16291 non-null  object \n",
            " 6   na_sales      16291 non-null  float64\n",
            " 7   eu_sales      16291 non-null  float64\n",
            " 8   jp_sales      16291 non-null  float64\n",
            " 9   other_sales   16291 non-null  float64\n",
            " 10  global_sales  16291 non-null  float64\n",
            "dtypes: float64(5), int64(2), object(4)\n",
            "memory usage: 1.5+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 224
        },
        "id": "GDugZ9RO7jDH",
        "outputId": "7d654b89-775c-4dc4-e688-bfd12f4d8e8a"
      },
      "source": [
        "df.head()"
      ],
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>rank</th>\n",
              "      <th>name</th>\n",
              "      <th>platform</th>\n",
              "      <th>year</th>\n",
              "      <th>genre</th>\n",
              "      <th>publisher</th>\n",
              "      <th>na_sales</th>\n",
              "      <th>eu_sales</th>\n",
              "      <th>jp_sales</th>\n",
              "      <th>other_sales</th>\n",
              "      <th>global_sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Wii Sports</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2006</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>41.49</td>\n",
              "      <td>29.02</td>\n",
              "      <td>3.77</td>\n",
              "      <td>8.46</td>\n",
              "      <td>82.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Super Mario Bros.</td>\n",
              "      <td>NES</td>\n",
              "      <td>1985</td>\n",
              "      <td>Platform</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>29.08</td>\n",
              "      <td>3.58</td>\n",
              "      <td>6.81</td>\n",
              "      <td>0.77</td>\n",
              "      <td>40.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Mario Kart Wii</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2008</td>\n",
              "      <td>Racing</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>15.85</td>\n",
              "      <td>12.88</td>\n",
              "      <td>3.79</td>\n",
              "      <td>3.31</td>\n",
              "      <td>35.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Wii Sports Resort</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2009</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>15.75</td>\n",
              "      <td>11.01</td>\n",
              "      <td>3.28</td>\n",
              "      <td>2.96</td>\n",
              "      <td>33.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Pokemon Red/Pokemon Blue</td>\n",
              "      <td>GB</td>\n",
              "      <td>1996</td>\n",
              "      <td>Role-Playing</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>11.27</td>\n",
              "      <td>8.89</td>\n",
              "      <td>10.22</td>\n",
              "      <td>1.00</td>\n",
              "      <td>31.37</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   rank                      name platform  ...  jp_sales other_sales global_sales\n",
              "0     1                Wii Sports      Wii  ...      3.77        8.46        82.74\n",
              "1     2         Super Mario Bros.      NES  ...      6.81        0.77        40.24\n",
              "2     3            Mario Kart Wii      Wii  ...      3.79        3.31        35.82\n",
              "3     4         Wii Sports Resort      Wii  ...      3.28        2.96        33.00\n",
              "4     5  Pokemon Red/Pokemon Blue       GB  ...     10.22        1.00        31.37\n",
              "\n",
              "[5 rows x 11 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LG5NXGw_7J0j"
      },
      "source": [
        "## EDA"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "2x9QLiWu81Z6",
        "outputId": "eaaf3f50-677b-4eaa-d517-2cfe8dd50674"
      },
      "source": [
        "df.describe()"
      ],
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>rank</th>\n",
              "      <th>year</th>\n",
              "      <th>na_sales</th>\n",
              "      <th>eu_sales</th>\n",
              "      <th>jp_sales</th>\n",
              "      <th>other_sales</th>\n",
              "      <th>global_sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>16291.000000</td>\n",
              "      <td>16291.000000</td>\n",
              "      <td>16291.000000</td>\n",
              "      <td>16291.000000</td>\n",
              "      <td>16291.000000</td>\n",
              "      <td>16291.000000</td>\n",
              "      <td>16291.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>8290.190228</td>\n",
              "      <td>2006.405561</td>\n",
              "      <td>0.265647</td>\n",
              "      <td>0.147731</td>\n",
              "      <td>0.078833</td>\n",
              "      <td>0.048426</td>\n",
              "      <td>0.540910</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>4792.654450</td>\n",
              "      <td>5.832412</td>\n",
              "      <td>0.822432</td>\n",
              "      <td>0.509303</td>\n",
              "      <td>0.311879</td>\n",
              "      <td>0.190083</td>\n",
              "      <td>1.567345</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>1980.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.010000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>4132.500000</td>\n",
              "      <td>2003.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.060000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>8292.000000</td>\n",
              "      <td>2007.000000</td>\n",
              "      <td>0.080000</td>\n",
              "      <td>0.020000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.010000</td>\n",
              "      <td>0.170000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>12439.500000</td>\n",
              "      <td>2010.000000</td>\n",
              "      <td>0.240000</td>\n",
              "      <td>0.110000</td>\n",
              "      <td>0.040000</td>\n",
              "      <td>0.040000</td>\n",
              "      <td>0.480000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>16600.000000</td>\n",
              "      <td>2020.000000</td>\n",
              "      <td>41.490000</td>\n",
              "      <td>29.020000</td>\n",
              "      <td>10.220000</td>\n",
              "      <td>10.570000</td>\n",
              "      <td>82.740000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "               rank          year  ...   other_sales  global_sales\n",
              "count  16291.000000  16291.000000  ...  16291.000000  16291.000000\n",
              "mean    8290.190228   2006.405561  ...      0.048426      0.540910\n",
              "std     4792.654450      5.832412  ...      0.190083      1.567345\n",
              "min        1.000000   1980.000000  ...      0.000000      0.010000\n",
              "25%     4132.500000   2003.000000  ...      0.000000      0.060000\n",
              "50%     8292.000000   2007.000000  ...      0.010000      0.170000\n",
              "75%    12439.500000   2010.000000  ...      0.040000      0.480000\n",
              "max    16600.000000   2020.000000  ...     10.570000     82.740000\n",
              "\n",
              "[8 rows x 7 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ILhh3d217NxX"
      },
      "source": [
        "df_top_games = df[['name', 'na_sales', 'eu_sales', 'jp_sales', 'other_sales']]"
      ],
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Xeu3edUu9A1O",
        "outputId": "de8a31e1-8134-4c5d-c095-f434acf0cfb6"
      },
      "source": [
        "for col in ['na_sales', 'eu_sales', 'jp_sales', 'other_sales']:\n",
        "  print(col)\n",
        "  print(df_top_games[df_top_games[col]==df_top_games[col].max()])"
      ],
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "na_sales\n",
            "         name  na_sales  eu_sales  jp_sales  other_sales\n",
            "0  Wii Sports     41.49     29.02      3.77         8.46\n",
            "eu_sales\n",
            "         name  na_sales  eu_sales  jp_sales  other_sales\n",
            "0  Wii Sports     41.49     29.02      3.77         8.46\n",
            "jp_sales\n",
            "                       name  na_sales  eu_sales  jp_sales  other_sales\n",
            "4  Pokemon Red/Pokemon Blue     11.27      8.89     10.22          1.0\n",
            "other_sales\n",
            "                             name  na_sales  eu_sales  jp_sales  other_sales\n",
            "17  Grand Theft Auto: San Andreas      9.43       0.4      0.41        10.57\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5iP6-2WUABLm"
      },
      "source": [
        "O Jogo mais vendido nas regiões foram Wii Sports, Pokemon, GTA"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "txr9cKI7-Zi5",
        "outputId": "2c5f396c-fa02-4f8c-a5a8-fdfa9509bb3f"
      },
      "source": [
        "for col in ['na_sales', 'eu_sales', 'jp_sales', 'other_sales']:\n",
        "  df_plot = df_top_games.sort_values(by=col, ascending=False).head(5)\n",
        "  df_plot[['name',col]].set_index('name').plot.bar(rot=90)\n",
        "  plt.title(f'Sales in {col}')"
      ],
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXAAAAFlCAYAAADyArMXAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nO3deZwcdZ3/8debGAlyRWCIkYBhBZVDEkJCEBAR5FD4KQLLei6sAusq682K4nqguKi7siouGkQBRRAEhQUVkGPlJoc5jYJCIkGQEAwE5AjJ+/dH1STDZCbTc1bX9Pv5ePRjuqq6qz/dybyn+lvf+n5lm4iIqJ8Nqi4gIiL6JgEeEVFTCfCIiJpKgEdE1FQCPCKiphLgERE1lQCPiKipBHhURtIiSW8Y4H0ukLT/QO6zCpIsaYeq64jmlgCPfpG0r6TbJD0m6VFJt0qaUlU9tnexfVNVrx8xlF5QdQFRX5I2A64C/gW4BHgh8FrgmSrrimgVOQKP/ngFgO2LbK+y/ZTta23PBZD0ckk3SFom6RFJF0oa3dWOJG0g6RRJfywff4mkLcptoyT9sFy/XNJ0SWO62c+aZhlJnyv3c4GkFWXzyuTu3kzZbPE+SfeUr/MtSerte+m0z09IeqB8/d9LOrBcv6ek28vXeVDSWZJe2M0+NpT0n5L+JOkvkr4taaNy21aSrir386ikmyXl97pF5B86+uNuYJWk8yW9UdKLO20X8B/AS4GdgG2Bz3Wzr38FjgBeVz7+r8C3ym3HApuXz98SeB/wVIM1vhm4GBgNXAmc1cPjDwemALsBxwCH9OG9FE+QXgmcBEyxvWm5r0Xl5lXAR4CtgNcABwLv72ZXZ1D8sZwI7ABsA3ym3PYxYAnQBowBPgVkgKMWkQCPPrP9OLAvRWCcAyyVdGX70bHtP9i+zvYztpcCX6MI6K68DzjV9hLbz1CE49GSXgCspAjuHcoj/ZnlazfiFts/t70K+AEwoYfHn2F7ue0/ATdShGZv30u7VcCGwM6SRtpeZPuP5f5m2r7D9nO2FwHf6Wp/5TeAE4GP2H7U9grgS8DbyoesBMYCL7O90vbNzgh1LSMBHv1ie6Ht42yPA3alOEL9bwBJYyRdXDYhPA78kOKIsysvA35aNgUsBxZSBOAYiuC9BrhY0p8lfUXSyAZLfKjD/b8Bo8o/Co0+fpM+vBegCH3gwxR/jB4un//Scn+vKJs+Hir396Vu9tcGvAiY2eGz+WW5HuCrwB+AayXdK+mU9dUUw0sCPAaM7d8B51EEORShZODVtjcD3kXRFNGV+4E32h7d4TbK9gPlkeXnbe8M7E3RzPGPg/pm1tWb97KG7R/Z3pfiD5SBL5ebzgZ+B+xY7u9T3ezvEYrmol06fC6b296k3P8K2x+z/XcUzUUfbW9nj+EvAR59JulVkj4maVy5vC3wduCO8iGbAk8Aj0naBjh5Pbv7NnC6pJeV+2qT9Jby/uslvVrSCOBximaD1YPyprrXm/cCFG3gkg6QtCHwNEUQt9e9KcV7eULSqyh68qzD9mqK5qkzJW1d7ncbSYeU9w+XtEPZ1PIYxbeWof5soiIJ8OiPFcBU4E5JT1IE93yKE2sAnwcmUQTL1cDl69nX1ylOMl4raUW5r6nltpcAP6EIvIXA/1E0qwyl3ryXdhtSnIB8hKJpZmvgk+W2jwPvoPgMzwF+vJ79fIKimeSOsrnlV8Ary207lstPALcD/2P7xobfVdSacr4jIqKecgQeEVFTuRIzoh8kbQf8tpvNO5fdESMGRZpQIiJqKk0oERE1NaRNKFtttZXHjx8/lC8ZEVF7M2fOfMR2W+f1Qxrg48ePZ8aMGUP5khERtSdpcVfr04QSEVFTCfCIiJpKgEdE1FT6gUfEgFu5ciVLlizh6aefrrqUWhk1ahTjxo1j5MjGBttMgEfEgFuyZAmbbrop48ePp5zUKHpgm2XLlrFkyRK23377hp6TJpSIGHBPP/00W265ZcK7FySx5ZZb9upbSwI8IgZFwrv3evuZJcAjImqqdm3g40+5uuoSWHTGYVWXEFErA/1722y/g4sWLeLwww9n/vz5Q/q6OQKPiKipBHhEDDuLFi1ip5124oQTTmCXXXbh4IMP5qmnnuKcc85hypQpTJgwgaOOOoq//e1v3e7j0ksvZdddd2XChAnst99+a/b72te+lkmTJjFp0iRuu+22dZ63atUqTj75ZKZMmcJuu+3Gd77zHQAefPBB9ttvPyZOnMiuu+7KzTff3O/3mQCPiGHpnnvu4QMf+AALFixg9OjRXHbZZRx55JFMnz6dOXPmsNNOO3Huued2+/zTTjuNa665hjlz5nDllVcCsPXWW3Pdddcxa9YsfvzjH/PBD35wneede+65bL755kyfPp3p06dzzjnncN999/GjH/2IQw45hNmzZzNnzhwmTpzY7/fYcBt4OaHsDOAB24dL2h64GNgSmAm82/az/a4oImIAbL/99mtCco899mDRokXMnz+fT3/60yxfvpwnnniCQw45pNvn77PPPhx33HEcc8wxHHnkkUBxgdJJJ53E7NmzGTFiBHffffc6z7v22muZO3cuP/nJTwB47LHHuOeee5gyZQrvec97WLlyJUccccSABHhvjsA/RDGhbLsvA2fa3gH4K/DeflcTETFANtxwwzX3R4wYwXPPPcdxxx3HWWedxbx58/jsZz+73j7X3/72t/niF7/I/fffzx577MGyZcs488wzGTNmDHPmzGHGjBk8++y6x6y2+eY3v8ns2bOZPXs29913HwcffDD77bcfv/71r9lmm2047rjjuOCCC/r9HhsKcEnjgMOA75bLAg6gmCkc4HzgiH5XExExiFasWMHYsWNZuXIlF1544Xof+8c//pGpU6dy2mmn0dbWxv33389jjz3G2LFj2WCDDfjBD37AqlWr1nneIYccwtlnn83KlSsBuPvuu3nyySdZvHgxY8aM4YQTTuD4449n1qxZ/X4/jTah/Dfwb8Cm5fKWwHLbz5XLS4Bt+l1NRAxLzdLt7wtf+AJTp06lra2NqVOnsmLFim4fe/LJJ3PPPfdgmwMPPJAJEybw/ve/n6OOOooLLriAQw89lI033nid5x1//PEsWrSISZMmYZu2tjZ+9rOfcdNNN/HVr36VkSNHsskmmwzIEXiPc2JKOhx4k+33S9of+DhwHHBH2XyCpG2BX9jetYvnnwicCLDddtvtsXhxl+OSNyz9wCOa38KFC9lpp52qLqOWuvrsJM20PbnzYxtpQtkHeLOkRRQnLQ8Avg6MltR+BD8OeKCrJ9ueZnuy7cltbevMCBQREX3UY4Db/qTtcbbHA28DbrD9TuBG4OjyYccCVwxalRERg+T0009n4sSJz7udfvrpVZfVkP5cSv8J4GJJXwR+A3TfoTIiokmdeuqpnHrqqVWX0Se9CnDbNwE3lffvBfYc+JIiYjiwnREJe6mnc5Kd5UrMiBhwo0aNYtmyZb0OpFbWPqHDqFGjGn5O7UYjjIjmN27cOJYsWcLSpUurLqVW2qdUa1QCPCIG3MiRIxueFiz6Lk0oERE1lQCPiKipBHhERE0lwCMiaioBHhFRUwnwiIiaSoBHRNRUAjwioqYS4BERNZUAj4ioqQR4RERNJcAjImoqAR4RUVM9BrikUZLukjRH0gJJny/XnyfpPkmzy9vEwS83IiLaNTKc7DPAAbafkDQSuEXSL8ptJ9v+yeCVFxER3ekxwF1MqfFEuTiyvGWajYiIijXUBi5phKTZwMPAdbbvLDedLmmupDMlbThoVUZExDoaCnDbq2xPBMYBe0raFfgk8CpgCrAFxSz165B0oqQZkmZkeqWIiIHTq14otpcDNwKH2n7QhWeA79PNDPW2p9mebHtyW1tb/yuOiAigsV4obZJGl/c3Ag4CfidpbLlOwBHA/MEsNCIinq+RXihjgfMljaAI/EtsXyXpBkltgIDZwPsGsc6IiOikkV4oc4Hdu1h/wKBUFBERDcmVmBERNZUAj4ioqQR4RERNJcAjImoqAR4RUVMJ8IiImkqAR0TUVAI8IqKmEuARETWVAI+IqKkEeERETSXAIyJqKgEeEVFTCfCIiJpKgEdE1FQCPCKiphqZUm2UpLskzZG0QNLny/XbS7pT0h8k/VjSCwe/3IiIaNfIEfgzwAG2JwATgUMl7QV8GTjT9g7AX4H3Dl6ZERHRWY8BXs48/0S5OLK8GTgA+Em5/nyKiY0jImKINNQGLmmEpNnAw8B1wB+B5bafKx+yBNhmcEqMiIiuNBTgtlfZngiMA/YEXtXoC0g6UdIMSTOWLl3axzIjIqKzXvVCsb0cuBF4DTBaUvus9uOAB7p5zjTbk21Pbmtr61exERGxViO9UNokjS7vbwQcBCykCPKjy4cdC1wxWEVGRMS6XtDzQxgLnC9pBEXgX2L7Kkm/BS6W9EXgN8C5g1hnRER00mOA254L7N7F+nsp2sOjIuNPubrqElh0xmFVlxDRsnIlZkRETSXAIyJqKgEeEVFTCfCIiJpKgEdE1FQCPCKiphLgERE1lQCPiKipBHhERE0lwCMiaqqRsVAiml6GFYhWlCPwiIiaSoBHRNRUAjwioqYS4BERNZUAj4ioqUamVNtW0o2SfitpgaQPles/J+kBSbPL25sGv9yIiGjXSDfC54CP2Z4laVNgpqTrym1n2v7PwSsvIiK608iUag8CD5b3V0haCGwz2IVFRMT69aoNXNJ4ivkx7yxXnSRprqTvSXrxANcWERHr0XCAS9oEuAz4sO3HgbOBlwMTKY7Q/6ub550oaYakGUuXLh2AkiMiAhoMcEkjKcL7QtuXA9j+i+1VtlcD59DNDPW2p9mebHtyW1vbQNUdEdHyGumFIuBcYKHtr3VYP7bDw94KzB/48iIiojuN9ELZB3g3ME/S7HLdp4C3S5oIGFgE/POgVBgREV1qpBfKLYC62PTzgS8nIiIalSsxIyJqKgEeEVFTCfCIiJpKgEdE1FSmVIsYZjK9XOvIEXhERE0lwCMiaioBHhFRUwnwiIiaSoBHRNRUAjwioqYS4BERNZUAj4ioqQR4RERNJcAjImoqAR4RUVONTKm2raQbJf1W0gJJHyrXbyHpOkn3lD8zK31ExBBq5Aj8OeBjtncG9gI+IGln4BTgets7AteXyxERMUR6DHDbD9qeVd5fASwEtgHeApxfPux84IjBKjIiItbVqzZwSeOB3YE7gTG2Hyw3PQSMGdDKIiJivRoOcEmbAJcBH7b9eMdttk0xO31XzztR0gxJM5YuXdqvYiMiYq2GAlzSSIrwvtD25eXqv0gaW24fCzzc1XNtT7M92fbktra2gag5IiJorBeKgHOBhba/1mHTlcCx5f1jgSsGvryIiOhOI1Oq7QO8G5gnaXa57lPAGcAlkt4LLAaOGZwSIyKiKz0GuO1bAHWz+cCBLSciIhqVKzEjImoqAR4RUVMJ8IiImkqAR0TUVAI8IqKmEuARETWVAI+IqKkEeERETSXAIyJqKgEeEVFTCfCIiJpKgEdE1FQCPCKiphLgERE1lQCPiKipRiZ0iIiopfGnXF11CSw647BB23cjU6p9T9LDkuZ3WPc5SQ9Iml3e3jRoFUZERJcaaUI5Dzi0i/Vn2p5Y3n4+sGVFRERPegxw278GHh2CWiIiohf6cxLzJElzyyaWFw9YRRER0ZC+BvjZwMuBicCDwH9190BJJ0qaIWnG0qVL+/hyERHRWZ8C3PZfbK+yvRo4B9hzPY+dZnuy7cltbW19rTMiIjrpU4BLGtth8a3A/O4eGxERg6PHfuCSLgL2B7aStAT4LLC/pImAgUXAPw9ijRER0YUeA9z227tYfe4g1BIREb2QS+kjImoqAR4RUVMJ8IiImkqAR0TUVAI8IqKmEuARETWVAI+IqKkEeERETSXAIyJqKgEeEVFTCfCIiJpKgEdE1FQCPCKiphLgERE1lQCPiKipBHhERE31GODlrPMPS5rfYd0Wkq6TdE/5M7PSR0QMsUaOwM8DDu207hTgets7AteXyxERMYR6DHDbvwYe7bT6LcD55f3zgSMGuK6IiOhBX9vAx9h+sLz/EDBmgOqJiIgG9fskpm1TzE7fJUknSpohacbSpUv7+3IREVHqa4D/RdJYgPLnw9090PY025NtT25ra+vjy0VERGd9DfArgWPL+8cCVwxMORER0ahGuhFeBNwOvFLSEknvBc4ADpJ0D/CGcjkiIobQC3p6gO23d7PpwAGuJSIieiFXYkZE1FQCPCKiphLgERE1lQCPiKipBHhERE0lwCMiaioBHhFRUwnwiIiaSoBHRNRUAjwioqYS4BERNZUAj4ioqQR4RERNJcAjImoqAR4RUVMJ8IiImupxQof1kbQIWAGsAp6zPXkgioqIiJ71K8BLr7f9yADsJyIieiFNKBERNdXfADdwraSZkk7s6gGSTpQ0Q9KMpUuX9vPlIiKiXX8DfF/bk4A3Ah+QtF/nB9ieZnuy7cltbW39fLmIiGjXrwC3/UD582Hgp8CeA1FURET0rM8BLmljSZu23wcOBuYPVGEREbF+/emFMgb4qaT2/fzI9i8HpKqIiOhRnwPc9r3AhAGsJSIieiHdCCMiaioBHhFRUwnwiIiaSoBHRNRUAjwioqYS4BERNZUAj4ioqQR4RERNJcAjImoqAR4RUVMJ8IiImkqAR0TUVAI8IqKmEuARETWVAI+IqKkEeERETfUrwCUdKun3kv4g6ZSBKioiInrWnzkxRwDfopiRfmfg7ZJ2HqjCIiJi/fpzBL4n8Afb99p+FrgYeMvAlBURET2R7b49UToaONT28eXyu4Gptk/q9LgTgRPLxVcCv+97uQNiK+CRimtoFvks1spnsVY+i7Wa5bN4me22ziv7Myt9Q2xPA6YN9us0StIM25OrrqMZ5LNYK5/FWvks1mr2z6I/TSgPANt2WB5XrouIiCHQnwCfDuwoaXtJLwTeBlw5MGVFRERP+tyEYvs5SScB1wAjgO/ZXjBglQ2epmnOaQL5LNbKZ7FWPou1mvqz6PNJzIiIqFauxIyIqKkEeERETSXAoyVJ+vtG1kU0s2Ef4JL+XtKm5f1PS7pc0qSq62oWLfxZfLLBdcOepK9I2kzSSEnXS1oq6V1V1xU9G/YBDvy77RWS9gXeAJwLnF1xTc3kX6ouYChJeqOkbwLbSPpGh9t5wHMVl1eVg20/DhwOLAJ2AE6utKIhJumW8ucKSY93uK2Q9HjV9XVn0K/EbAKryp+HAdNsXy3pi1UW1Exsn1B1DUPsz8AM4M3AzA7rVwAfqaSi6rXnwGHApbYfk1RlPUPO9r7lz02rrqU3hn03QklXUVwhehAwCXgKuMv2hEoLq4CkfYDZtp8svyJPAr5ue3HFpQ05SSNtr6y6jmYg6QzgCIrfjT2B0cBVtqdWWtgQkrSZ7cclbdHVdtuPDnVNjWiFAH8RcCgwz/Y9ksYCr7Z9bcWlDTlJc4EJwG7AecB3gWNsv67KuqpQ/jH7HPAyiiNQAbb9d1XWVZUyuB6zvar8ndnM9kNV1zVUJF1l+3BJ9wGm+P/Qrmn/X7RCgP/A9rt7WtcKJM2yPUnSZ4AHbJ/bvq7q2oaapN9RNJnMZG0zG7aXVVbUEJN0gO0bJB3Z1Xbblw91TdE7rdAGvkvHhXIiij0qqqVqKyR9Eng38FpJGwAjK66pKo/Z/kXVRVTsdcANwP/rYpuBlglwScuAO4FbgduAO23/rdqqejZsj8DLoPoUsBHQ/g8h4FmKk5kt12VM0kuAdwDTbd8saTtgf9sXVFzakCvbfUdQhNQz7ettz6qsqAqUf8SPtn1J1bVUSdJmwF7A3uVtD+A+ikC/tVk/n2Eb4LDmP+d3bb+n6lqahaQxwJRy8S7bD1dZT1Uk3djFats+YMiLqVizj3ldBUkbA/8EfBjY3vaIikvq0rAOcABJ82y/uuo6moGkY4CvAjdRfBt5LXCy7Z9UWVdUq/w28gjwY+DJ9vXN2vNiMEh6KWuPvtsPcGYCdwC3N2tPrVYI8POBs2xPr7qWqkmaAxzUftQtqQ34VYt2qfxMV+ttnzbUtVSt7HnRWdP2vBgMklYDs4AzKfrCP1txSQ1phZOYU4F3SlpMcXTR3l1st2rLqsQGnZpMltEaV+N25ckO90dRXIW4sKJaqraT7ac7rpA0qqpiKrIP8BrgrcBHJS0Cbi9vM2w/s57nVqYVjsBf1tX6Zv1KNJgkfZWiD/hF5ap/AOba/kR1VTUHSRsC19jev+pahlpXXUlbtXtpO0njKXrnfAgYZ7sp/6AN+yNw24slTaBo7wW42facKmuqgopro79B0b63b7l6mu2fVldVU3kRxbyuLaPslbQNsJGk3Vl78cpmFJ9HS5H0Kta2g+9DcUXqHcC3q6xrfVrhCPxDwAms7dP6Vorg+mZ1VVUjJ3TXkjSPoq8zFN0J24DTbJ9VXVVDS9KxwHHAZIrxYdo9DpzfShfySHqEYpyc2yn7gtv+Q7VV9awVAnwu8BrbT5bLG1OcVW65NvCc0F2rU9Pac8BfbLfkaISSjrJ9WdV1VEnS5rYfq7qO3hr2TSgUXwtXdVhexfPHOWglLX9Ct8NgRSs6bdpMUkt1nevgVknnAi+1/UZJO1Mc9JxbdWFDpY7hDa0R4N8H7pT0U4rAegvFmOCt6JCqC2gCM1k7WNFYiq/N7X/QDbRM17kOvl/eTi2X76boE96qvye1MeybUGDNrDP7UvyC3mL7NxWXVKlytLmdgcW2l1ZdT1Uk/cb27lXXURVJL7D9nKTptqd0/DwkzbY9seoah5qk7W3f19O6ZtFKfYDV6WfLkPRmSYskzZL0JmABcBYwrzyR1aqG/9HL+t1V/nxS0paUn4ekvYBaNikMgK7OBTTtlcrDvgmlvOLu7yn+YQR8X9KltltpVp4vAAcDmwM3ArvZvlfS1sD1wPlVFheVaT+Y+ShwJfBySbdS9Mg5urKqKlB2IdwF2LzT8LqbUVzo1ZSGfYAD7wQmtF9pVo77MBtopQBfbftuKC6btn0vgO2HJbVUzwtJH+2wuHWnZWx/bYhLqlJbh/f/U+DnFKH+DMX8sXOrKqwCr6S4Gnc0zx9edwVFN+Sm1AoB/meKv6DtlwpvSDHFWivZQNKLKZrMVpf324++WqkZDaDjnIfndFpuNSOATVi3WbHlLuKxfUU5/eInbH+p6noaNexPYkr6GcXVh9dRtPEdRNH2twTA9gerq25olOM6rKbr9v+WGrQo1mr1y+W7Iuku23tWXUejWiHA13uSznbaf6MltXovnK5IOpNilqrOQ+s25UQfwz7A20kaCexKMRdkS05iENGRpC1a9MKlbtVtoo9hG+CSvg180/YCSZtTjHGwCtgC+Ljti9a7gxjWJG3YeYjQBFrUzXAO8AW2dynvf5hi7scjyhHYfpGvjq1N0tXAEbZXlstjgatst+qE11GSdBhFl8I13QebdaKP4dwLpeOMGgcBlwLYfqgYWbU1ZWjdNX4GXCLpaGBbin7QH6+2pKha+c39RcDrge9S9Ie/a71PqtBw7kK2XNLh5TjH+wC/hOLyYYqZ6ltOObTuhcDW5e2Hkv612qqqYfsc4FcUQf6/wPtsX1ttVdEE9rb9j8BfbX+eYpaeV1RcU7eG8xH4P1NMYPAS4MO2HyrXHwhcXVlV1XovMLXD0Lpfpjg30DJjo3e6cEfAdhQXdu0laa8Wu5An1vVU+fNv5UTHyygGPWtKwzbAyysPD+1i/TXANUNfUVPI0LrrXrhzeTfrozVdJWk08FWKSY5NccFXUxq2JzFjXeXR57EUl00DHAGcZ/u/q6sqonpdTehQzpM6CtjR9oyun1mt4dwGHp2UzQP/BDxa3v6pVcNb0nXlkVb78oslteo3s4BflUNMrFF2M92TtQc8TWfYNqHEWpI2s/14ORvNovLWvq1V+z632V7evmD7r+XojNGapgE3SjqofYx8Se8ATgcOq7Sy9Ri2AS7pXbZ/2Hm0uXYtdrLqRxQjrbXPRtNOtO4sNKskbWf7T7Bmjsy0J7Yo2+dIehq4QdLBwD8A7wNeb3tRpcWtx7ANcGDj8mfLn5yyfbiKzu+vaw+s4FTgFkn/R/GH7LXAidWWFFWy/YMyxH8D/AnY1/YjFZe1XjmJ2UIkzbP96qrraBaStgL2KhfvaPZf1hg8kuaxdq7UlwFLqcHE38P2CFzSv9n+iqRv0sVX41YYRrYLsyRNsT296kKqJmm/8u7j5c+dy1npf11VTVGpw6suoC+GbYADC8ufTdn9pyJTgXdKWkwNji4G2ckd7o+i6G0wE2jKUedicNleXHUNfTGcA/zlkvYELrTdUtOGrcchVRfQLGx3nDYLSdsCLdmlMuprOAf4OIpfyFeV7Vu3ArcBt7Vot7k1Rxlld7mmnai1IkuAnaouIqI3hv1JTEkvBCYDe1MMTPMaYLntnSstrAKS3gz8F/BS4GGKkzUL24fdbSWdzo1sAEwEFtl+V3VVRTMoM6N9AKvftw853IyG8xF4u42AzYDNy9ufgXmVVlSdL1D0uviV7d0lvR5o1cDqeG7kOeAi27dWVUw0B0n7A+dTXOwmYFtJxzbrye1hewQuaRrFoOwrgDuBOyi6iv210sIqJGmG7cmS5gC7214taY7tCVXXVgVJbQDtV95FSJoJvMP278vlV1D8cW/KiT6G81go2wEbAg8BD1C0cS5f7zOGv+WSNgF+DVwo6et0mLi1FajwOUmPAL8H7pa0VNJnqq4tmsLI9vCGNaOajqywnvUatkfgUPyyUhyF713edqUYxOl225+tsrYqSNoYeJriq+E7KZqULrS9rNLChlA5tMIbgRNt31eu+zvgbOCXts+ssr6olqTvAauBH5ar3gmMsP2e6qrq3rAO8HaSxlHMyrM3RYf9LW2PXv+zYjiS9BvgoM5XXZbNKddmrtTWVg4h+wFg33LVzcD/dJ4Au1kM2wCX9EHWHnmvpOxCWN7m2V5dYXlDStIKuh7Eqv1Cns0qKawCkubb3rW32yKa0XDuhTKeYiLjj9h+sOJaqnY9xdRylwMXt/iAVs/2cVsMY5IusX1MhzFRnqdZr1Yetkfg8XySNgeOBN5GcRHPjynCvBhMnzgAAAUFSURBVKUuapK0iq5P3AoYZbtpT1jF4JE01vaD5bDC62jWS+0T4C1G0gYUIf4N4EstNi56RLckjaC4RuL1VdfSqOHchBIdSNobeDvFuNe3AG+1fXO1VUU0D9urJK3uan7MZpUj8BYgaRFFH/iLgRsorjxcw/asCsqKaDqSrgB2B66jQ1Nbsw4/nQBvAZJuYu2JmfbeJ+1sO0OoRgCSju1qve3zh7qWRiTAIyJqKm3gERElSTsC/wHsTIchl2035cTfw3kslIiI3vo+xbAKzwGvBy5g7WX1TScB3iLKQZy2rbqOiCa3ke3rKZqXF9v+HHBYxTV1K00oLcK2Jf0cyKz0Ed17prxW4h5JJ1GMZLpJxTV1K0fgrWWWpClVFxHRxD4EvAj4ILAH8G6gy54pzSC9UFqIpN8BOwCZlT5iGEiAt5C6jfMQMVQkXbm+7bbfPFS19EbawFuI7cWS9gV2tP39cgzspm3fixhCrwHuBy6imIJR6394c8gReAuR9FlgMvBK26+Q9FLgUtv7VFxaRKXKgawOohgvaDfgaoq5MBdUWlgPchKztbwVeDPlGA+2/wxsWmlFEU3A9irbv7R9LLAX8AfgprInStNKE0prebbsTmhYM0dmRLBmOrXDKI7Cx1MMufzTKmvqSQK8tVwi6TvAaEknAO8Bzqm4pojKSbqAYtLznwOftz2/4pIakjbwFiPpIODgcvFa29dVWU9EM5C0mrXDx64zf2yzzhubI/DWMw/YiOI/6byKa4loCrZreT6wlkVH30g6HriLYm7Mo4E7JL2n2qoioq/ShNJCJP0e2Nv2snJ5S+A226+strKI6IscgbeWZcCKDssrynURUUM5Am8h5Zn2VwNXULSBvwWYW97IDPUR9ZKTmK3lj+Wt3RXlz1zME1FDOQKPiKipHIG3EEk38vw+rgBkVvqIekqAt5aPd7g/CjiKYu6/iKihNKG0OEl32d6z6joiovdyBN5CJG3RYXEDiimjNq+onIjopwR4a5lJ0QYuiqaT+4D3VlpRRPRZmlAiImoqV2K2AElTJL2kw/I/SrpC0jc6NatERI0kwFvDd4BnASTtB5wBXAA8BkyrsK6I6Ie0gbeGEbYfLe//AzDN9mXAZZJmV1hXRPRDjsBbwwhJ7X+sDwRu6LAtf8Qjaiq/vK3hIuD/JD0CPAXcDCBpB4pmlIioofRCaRGS9gLGUkyj9mS57hXAJrZnVVpcRPRJAjwioqbSBh4RUVMJ8IiImkqAR0TUVAI8IqKmEuAx7EgaL2mhpHMkLZB0raSNJJ0gabqkOZIuk/Si8vHnSTpb0h2S7pW0v6Tvlfs4r8N+D5Z0u6RZki6VtEllbzKCBHgMXzsC37K9C7CcYvKKy21PsT0BWMjzR2J8MfAa4CPAlcCZwC7AqyVNlLQV8GngDbYnATOAjw7Zu4noQi7kieHqPtvtwwTMBMYDu0r6IjAa2AS4psPj/9e2Jc0D/mJ7HoCkBeVzxwE7A7dKAnghcPsQvI+IbiXAY7h6psP9VcBGwHnAEbbnSDoO2L+Lx6/u9NzVFL8nq4DrbL99kOqN6LU0oUQr2RR4UNJI4J29fO4dwD7l8ANI2ri8kjWiMgnwaCX/DtwJ3Ar8rjdPtL0UOA64SNJciuaTVw10gRG9kUvpIyJqKkfgERE1lQCPiKipBHhERE0lwCMiaioBHhFRUwnwiIiaSoBHRNRUAjwioqb+PzjtAx8de1KiAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 224
        },
        "id": "MnyYRIZUAYJT",
        "outputId": "4c940729-7681-4779-d54e-c85110d9ee55"
      },
      "source": [
        "## Mais vendido por categoria\n",
        "df.head()"
      ],
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>rank</th>\n",
              "      <th>name</th>\n",
              "      <th>platform</th>\n",
              "      <th>year</th>\n",
              "      <th>genre</th>\n",
              "      <th>publisher</th>\n",
              "      <th>na_sales</th>\n",
              "      <th>eu_sales</th>\n",
              "      <th>jp_sales</th>\n",
              "      <th>other_sales</th>\n",
              "      <th>global_sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Wii Sports</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2006</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>41.49</td>\n",
              "      <td>29.02</td>\n",
              "      <td>3.77</td>\n",
              "      <td>8.46</td>\n",
              "      <td>82.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Super Mario Bros.</td>\n",
              "      <td>NES</td>\n",
              "      <td>1985</td>\n",
              "      <td>Platform</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>29.08</td>\n",
              "      <td>3.58</td>\n",
              "      <td>6.81</td>\n",
              "      <td>0.77</td>\n",
              "      <td>40.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Mario Kart Wii</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2008</td>\n",
              "      <td>Racing</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>15.85</td>\n",
              "      <td>12.88</td>\n",
              "      <td>3.79</td>\n",
              "      <td>3.31</td>\n",
              "      <td>35.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Wii Sports Resort</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2009</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>15.75</td>\n",
              "      <td>11.01</td>\n",
              "      <td>3.28</td>\n",
              "      <td>2.96</td>\n",
              "      <td>33.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Pokemon Red/Pokemon Blue</td>\n",
              "      <td>GB</td>\n",
              "      <td>1996</td>\n",
              "      <td>Role-Playing</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>11.27</td>\n",
              "      <td>8.89</td>\n",
              "      <td>10.22</td>\n",
              "      <td>1.00</td>\n",
              "      <td>31.37</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   rank                      name platform  ...  jp_sales other_sales global_sales\n",
              "0     1                Wii Sports      Wii  ...      3.77        8.46        82.74\n",
              "1     2         Super Mario Bros.      NES  ...      6.81        0.77        40.24\n",
              "2     3            Mario Kart Wii      Wii  ...      3.79        3.31        35.82\n",
              "3     4         Wii Sports Resort      Wii  ...      3.28        2.96        33.00\n",
              "4     5  Pokemon Red/Pokemon Blue       GB  ...     10.22        1.00        31.37\n",
              "\n",
              "[5 rows x 11 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8BdYzcTTAm2H"
      },
      "source": [
        "df_genre = df[['name','genre', 'global_sales']]"
      ],
      "execution_count": 27,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 457
        },
        "id": "4UbaolARBxVj",
        "outputId": "5c267be3-ea68-45e8-d4cb-3bf51263a952"
      },
      "source": [
        "df_genre.groupby('genre').agg({'name':'first', 'global_sales':'max'})"
      ],
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>global_sales</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>genre</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Action</th>\n",
              "      <td>Grand Theft Auto V</td>\n",
              "      <td>21.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Adventure</th>\n",
              "      <td>Super Mario Land 2: 6 Golden Coins</td>\n",
              "      <td>11.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Fighting</th>\n",
              "      <td>Super Smash Bros. Brawl</td>\n",
              "      <td>13.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Misc</th>\n",
              "      <td>Wii Play</td>\n",
              "      <td>29.02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Platform</th>\n",
              "      <td>Super Mario Bros.</td>\n",
              "      <td>40.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Puzzle</th>\n",
              "      <td>Tetris</td>\n",
              "      <td>30.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Racing</th>\n",
              "      <td>Mario Kart Wii</td>\n",
              "      <td>35.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Role-Playing</th>\n",
              "      <td>Pokemon Red/Pokemon Blue</td>\n",
              "      <td>31.37</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Shooter</th>\n",
              "      <td>Duck Hunt</td>\n",
              "      <td>28.31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Simulation</th>\n",
              "      <td>Nintendogs</td>\n",
              "      <td>24.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sports</th>\n",
              "      <td>Wii Sports</td>\n",
              "      <td>82.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Strategy</th>\n",
              "      <td>Pokemon Stadium</td>\n",
              "      <td>5.45</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                            name  global_sales\n",
              "genre                                                         \n",
              "Action                        Grand Theft Auto V         21.40\n",
              "Adventure     Super Mario Land 2: 6 Golden Coins         11.18\n",
              "Fighting                 Super Smash Bros. Brawl         13.04\n",
              "Misc                                    Wii Play         29.02\n",
              "Platform                       Super Mario Bros.         40.24\n",
              "Puzzle                                    Tetris         30.26\n",
              "Racing                            Mario Kart Wii         35.82\n",
              "Role-Playing            Pokemon Red/Pokemon Blue         31.37\n",
              "Shooter                                Duck Hunt         28.31\n",
              "Simulation                            Nintendogs         24.76\n",
              "Sports                                Wii Sports         82.74\n",
              "Strategy                         Pokemon Stadium          5.45"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RjdQC7hpBiCv",
        "outputId": "163aecab-9865-4f15-b4a9-b5799009afb8"
      },
      "source": [
        "df_genre.genre.unique()"
      ],
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Sports', 'Platform', 'Racing', 'Role-Playing', 'Puzzle', 'Misc',\n",
              "       'Shooter', 'Simulation', 'Action', 'Fighting', 'Adventure',\n",
              "       'Strategy'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1b1l56aYC3PO"
      },
      "source": [
        "## Jogo por Plataforma"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wIYd9oC3C8q4"
      },
      "source": [
        "df_plat = df[['name','platform', 'global_sales']]"
      ],
      "execution_count": 30,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "y_WoN_IlDLTO",
        "outputId": "52c88958-035b-42a2-a8fb-30e39acbbb67"
      },
      "source": [
        "df_plat.groupby('platform').agg({'name':'first', 'global_sales':'max'}).sort_values(by='global_sales', ascending=False)"
      ],
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>global_sales</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>platform</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Wii</th>\n",
              "      <td>Wii Sports</td>\n",
              "      <td>82.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NES</th>\n",
              "      <td>Super Mario Bros.</td>\n",
              "      <td>40.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>GB</th>\n",
              "      <td>Pokemon Red/Pokemon Blue</td>\n",
              "      <td>31.37</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DS</th>\n",
              "      <td>New Super Mario Bros.</td>\n",
              "      <td>30.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>X360</th>\n",
              "      <td>Kinect Adventures!</td>\n",
              "      <td>21.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PS3</th>\n",
              "      <td>Grand Theft Auto V</td>\n",
              "      <td>21.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PS2</th>\n",
              "      <td>Grand Theft Auto: San Andreas</td>\n",
              "      <td>20.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SNES</th>\n",
              "      <td>Super Mario World</td>\n",
              "      <td>20.61</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>GBA</th>\n",
              "      <td>Pokemon Ruby/Pokemon Sapphire</td>\n",
              "      <td>15.85</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3DS</th>\n",
              "      <td>Pokemon X/Pokemon Y</td>\n",
              "      <td>14.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PS4</th>\n",
              "      <td>Call of Duty: Black Ops 3</td>\n",
              "      <td>14.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>N64</th>\n",
              "      <td>Super Mario 64</td>\n",
              "      <td>11.89</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PS</th>\n",
              "      <td>Gran Turismo</td>\n",
              "      <td>10.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>XB</th>\n",
              "      <td>Halo 2</td>\n",
              "      <td>8.49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PC</th>\n",
              "      <td>The Sims 3</td>\n",
              "      <td>8.11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2600</th>\n",
              "      <td>Pac-Man</td>\n",
              "      <td>7.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PSP</th>\n",
              "      <td>Grand Theft Auto: Liberty City Stories</td>\n",
              "      <td>7.72</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>XOne</th>\n",
              "      <td>Call of Duty: Black Ops 3</td>\n",
              "      <td>7.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>GC</th>\n",
              "      <td>Super Smash Bros. Melee</td>\n",
              "      <td>7.07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>WiiU</th>\n",
              "      <td>Mario Kart 8</td>\n",
              "      <td>6.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>GEN</th>\n",
              "      <td>Sonic the Hedgehog 2</td>\n",
              "      <td>6.03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DC</th>\n",
              "      <td>Sonic Adventure</td>\n",
              "      <td>2.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PSV</th>\n",
              "      <td>Minecraft</td>\n",
              "      <td>2.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SAT</th>\n",
              "      <td>Virtua Fighter 2</td>\n",
              "      <td>1.93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SCD</th>\n",
              "      <td>Sonic CD</td>\n",
              "      <td>1.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>WS</th>\n",
              "      <td>Final Fantasy</td>\n",
              "      <td>0.51</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NG</th>\n",
              "      <td>Samurai Shodown II</td>\n",
              "      <td>0.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TG16</th>\n",
              "      <td>Doukyuusei</td>\n",
              "      <td>0.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3DO</th>\n",
              "      <td>Policenauts</td>\n",
              "      <td>0.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>GG</th>\n",
              "      <td>Sonic the Hedgehog 2 (8-bit)</td>\n",
              "      <td>0.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PCFX</th>\n",
              "      <td>Blue Breaker: Ken Yorimo Hohoemi o</td>\n",
              "      <td>0.03</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                            name  global_sales\n",
              "platform                                                      \n",
              "Wii                                   Wii Sports         82.74\n",
              "NES                            Super Mario Bros.         40.24\n",
              "GB                      Pokemon Red/Pokemon Blue         31.37\n",
              "DS                         New Super Mario Bros.         30.01\n",
              "X360                          Kinect Adventures!         21.82\n",
              "PS3                           Grand Theft Auto V         21.40\n",
              "PS2                Grand Theft Auto: San Andreas         20.81\n",
              "SNES                           Super Mario World         20.61\n",
              "GBA                Pokemon Ruby/Pokemon Sapphire         15.85\n",
              "3DS                          Pokemon X/Pokemon Y         14.35\n",
              "PS4                    Call of Duty: Black Ops 3         14.24\n",
              "N64                               Super Mario 64         11.89\n",
              "PS                                  Gran Turismo         10.95\n",
              "XB                                        Halo 2          8.49\n",
              "PC                                    The Sims 3          8.11\n",
              "2600                                     Pac-Man          7.81\n",
              "PSP       Grand Theft Auto: Liberty City Stories          7.72\n",
              "XOne                   Call of Duty: Black Ops 3          7.30\n",
              "GC                       Super Smash Bros. Melee          7.07\n",
              "WiiU                                Mario Kart 8          6.96\n",
              "GEN                         Sonic the Hedgehog 2          6.03\n",
              "DC                               Sonic Adventure          2.42\n",
              "PSV                                    Minecraft          2.25\n",
              "SAT                             Virtua Fighter 2          1.93\n",
              "SCD                                     Sonic CD          1.50\n",
              "WS                                 Final Fantasy          0.51\n",
              "NG                            Samurai Shodown II          0.25\n",
              "TG16                                  Doukyuusei          0.14\n",
              "3DO                                  Policenauts          0.06\n",
              "GG                  Sonic the Hedgehog 2 (8-bit)          0.04\n",
              "PCFX          Blue Breaker: Ken Yorimo Hohoemi o          0.03"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1ajXqUdvDPl3"
      },
      "source": [
        "### Jogos Exclusivos"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NaGeWsFrEVvW"
      },
      "source": [
        "df_unique_game_by_plat = df.groupby('name').agg({'platform':'nunique'})"
      ],
      "execution_count": 32,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wOrJj_axE8Ou"
      },
      "source": [
        "df_unique_game_by_plat = df_unique_game_by_plat[df_unique_game_by_plat.platform==1].reset_index()"
      ],
      "execution_count": 33,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2OhFtUazF7U-"
      },
      "source": [
        "df_exclusive = df.merge(df_unique_game_by_plat, on='name', how='left')"
      ],
      "execution_count": 34,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ETxStIo1Gvh8"
      },
      "source": [
        "df_exclusive.rename(columns={'platform_y':'is_exclusive'}, inplace=True)\n",
        "df_exclusive.is_exclusive = df_exclusive.is_exclusive.fillna(0)"
      ],
      "execution_count": 35,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "eVGBCLQ2Itl4",
        "outputId": "91e0d668-98ee-4155-84a5-82feccf2abbe"
      },
      "source": [
        "df_exclusive.groupby(['year','is_exclusive']).sum()[['global_sales']].reset_index().head()"
      ],
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>year</th>\n",
              "      <th>is_exclusive</th>\n",
              "      <th>global_sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1980</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9.38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1980</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1981</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1981</td>\n",
              "      <td>1.0</td>\n",
              "      <td>29.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1982</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12.78</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   year  is_exclusive  global_sales\n",
              "0  1980           0.0          9.38\n",
              "1  1980           1.0          2.00\n",
              "2  1981           0.0          5.95\n",
              "3  1981           1.0         29.82\n",
              "4  1982           0.0         12.78"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 621
        },
        "id": "7htRcsicHJvd",
        "outputId": "7b751c41-7e03-4812-8306-54e43baee241"
      },
      "source": [
        "df_exclusive.groupby(['year','is_exclusive']).sum()[['global_sales']].reset_index().pivot('year','is_exclusive','global_sales').plot(figsize=(15,10))\n",
        "plt.title('Vendas Exclusivos x Não Exclusivos por Ano')\n",
        "plt.legend(['Não Exclusivo','Exclusivo'])\n",
        "plt.show()"
      ],
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1080x720 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kILZL9JkHtKH",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 224
        },
        "outputId": "b791a412-cc61-484f-cdbb-ced5d87a946d"
      },
      "source": [
        "df.head()"
      ],
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>rank</th>\n",
              "      <th>name</th>\n",
              "      <th>platform</th>\n",
              "      <th>year</th>\n",
              "      <th>genre</th>\n",
              "      <th>publisher</th>\n",
              "      <th>na_sales</th>\n",
              "      <th>eu_sales</th>\n",
              "      <th>jp_sales</th>\n",
              "      <th>other_sales</th>\n",
              "      <th>global_sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Wii Sports</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2006</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>41.49</td>\n",
              "      <td>29.02</td>\n",
              "      <td>3.77</td>\n",
              "      <td>8.46</td>\n",
              "      <td>82.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Super Mario Bros.</td>\n",
              "      <td>NES</td>\n",
              "      <td>1985</td>\n",
              "      <td>Platform</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>29.08</td>\n",
              "      <td>3.58</td>\n",
              "      <td>6.81</td>\n",
              "      <td>0.77</td>\n",
              "      <td>40.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Mario Kart Wii</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2008</td>\n",
              "      <td>Racing</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>15.85</td>\n",
              "      <td>12.88</td>\n",
              "      <td>3.79</td>\n",
              "      <td>3.31</td>\n",
              "      <td>35.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Wii Sports Resort</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2009</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>15.75</td>\n",
              "      <td>11.01</td>\n",
              "      <td>3.28</td>\n",
              "      <td>2.96</td>\n",
              "      <td>33.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Pokemon Red/Pokemon Blue</td>\n",
              "      <td>GB</td>\n",
              "      <td>1996</td>\n",
              "      <td>Role-Playing</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>11.27</td>\n",
              "      <td>8.89</td>\n",
              "      <td>10.22</td>\n",
              "      <td>1.00</td>\n",
              "      <td>31.37</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   rank                      name platform  ...  jp_sales other_sales global_sales\n",
              "0     1                Wii Sports      Wii  ...      3.77        8.46        82.74\n",
              "1     2         Super Mario Bros.      NES  ...      6.81        0.77        40.24\n",
              "2     3            Mario Kart Wii      Wii  ...      3.79        3.31        35.82\n",
              "3     4         Wii Sports Resort      Wii  ...      3.28        2.96        33.00\n",
              "4     5  Pokemon Red/Pokemon Blue       GB  ...     10.22        1.00        31.37\n",
              "\n",
              "[5 rows x 11 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YOBPJFFLGE3K"
      },
      "source": [
        "df_publisher = df.groupby('publisher').agg({'global_sales':'sum', 'name':'nunique'})"
      ],
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 437
        },
        "id": "PWi7qfsEGvih",
        "outputId": "901bd376-ad64-4041-ff46-c477a73b9aa7"
      },
      "source": [
        "df_publisher.sort_values('global_sales', ascending=False)['global_sales'].head().plot.bar()\n",
        "plt.title('Top 5 Publisher in Global Sales')\n",
        "plt.show()"
      ],
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 437
        },
        "id": "PgfUyOMHIHfv",
        "outputId": "12fbcc6d-9ceb-41fe-9bf1-fea8c08fc4c3"
      },
      "source": [
        "df_publisher.sort_values('name', ascending=False)['name'].head().plot.bar()\n",
        "plt.title('Top 5 Publisher Number of Games')\n",
        "plt.show()"
      ],
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-32hNUfzKUTI"
      },
      "source": [
        "df['sales_without_na'] = df['jp_sales']+df.eu_sales+df.other_sales"
      ],
      "execution_count": 42,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 623
        },
        "id": "EvcKoAwkLM3P",
        "outputId": "ee2f7d42-2aa5-43b0-b2a1-4b8c5014b394"
      },
      "source": [
        "## NA x Others \n",
        "df.groupby('year').agg({'sales_without_na':'sum', 'na_sales':'sum', 'jp_sales':'sum'}).plot(figsize=(15,10))"
      ],
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f7dab4b76d0>"
            ]
          },
          "metadata": {},
          "execution_count": 43
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1080x720 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "lLrrLNbrL1jS",
        "outputId": "12fa24f2-ed46-4cf9-b8ab-5503293bfc1f"
      },
      "source": [
        "corr = df[['na_sales','sales_without_na', 'eu_sales','jp_sales','global_sales']].corr()\n",
        "corr"
      ],
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>na_sales</th>\n",
              "      <th>sales_without_na</th>\n",
              "      <th>eu_sales</th>\n",
              "      <th>jp_sales</th>\n",
              "      <th>global_sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>na_sales</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.776859</td>\n",
              "      <td>0.768923</td>\n",
              "      <td>0.451283</td>\n",
              "      <td>0.941269</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>sales_without_na</th>\n",
              "      <td>0.776859</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.932092</td>\n",
              "      <td>0.701177</td>\n",
              "      <td>0.943837</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>eu_sales</th>\n",
              "      <td>0.768923</td>\n",
              "      <td>0.932092</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.436379</td>\n",
              "      <td>0.903264</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>jp_sales</th>\n",
              "      <td>0.451283</td>\n",
              "      <td>0.701177</td>\n",
              "      <td>0.436379</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.612774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>global_sales</th>\n",
              "      <td>0.941269</td>\n",
              "      <td>0.943837</td>\n",
              "      <td>0.903264</td>\n",
              "      <td>0.612774</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                  na_sales  sales_without_na  eu_sales  jp_sales  global_sales\n",
              "na_sales          1.000000          0.776859  0.768923  0.451283      0.941269\n",
              "sales_without_na  0.776859          1.000000  0.932092  0.701177      0.943837\n",
              "eu_sales          0.768923          0.932092  1.000000  0.436379      0.903264\n",
              "jp_sales          0.451283          0.701177  0.436379  1.000000      0.612774\n",
              "global_sales      0.941269          0.943837  0.903264  0.612774      1.000000"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 357
        },
        "id": "hQQMwl0qPaYt",
        "outputId": "cfcc2feb-de43-4c5e-b01b-61599c076e7a"
      },
      "source": [
        "sns.heatmap(corr)\n",
        "plt.title('Correlation')\n",
        "plt.show()"
      ],
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "CmoCpB_5TLKH",
        "outputId": "486de209-1d1b-4734-867c-548eb6f8bc7c"
      },
      "source": [
        "df.head()"
      ],
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>rank</th>\n",
              "      <th>name</th>\n",
              "      <th>platform</th>\n",
              "      <th>year</th>\n",
              "      <th>genre</th>\n",
              "      <th>publisher</th>\n",
              "      <th>na_sales</th>\n",
              "      <th>eu_sales</th>\n",
              "      <th>jp_sales</th>\n",
              "      <th>other_sales</th>\n",
              "      <th>global_sales</th>\n",
              "      <th>sales_without_na</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Wii Sports</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2006</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>41.49</td>\n",
              "      <td>29.02</td>\n",
              "      <td>3.77</td>\n",
              "      <td>8.46</td>\n",
              "      <td>82.74</td>\n",
              "      <td>41.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Super Mario Bros.</td>\n",
              "      <td>NES</td>\n",
              "      <td>1985</td>\n",
              "      <td>Platform</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>29.08</td>\n",
              "      <td>3.58</td>\n",
              "      <td>6.81</td>\n",
              "      <td>0.77</td>\n",
              "      <td>40.24</td>\n",
              "      <td>11.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Mario Kart Wii</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2008</td>\n",
              "      <td>Racing</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>15.85</td>\n",
              "      <td>12.88</td>\n",
              "      <td>3.79</td>\n",
              "      <td>3.31</td>\n",
              "      <td>35.82</td>\n",
              "      <td>19.98</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Wii Sports Resort</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2009</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>15.75</td>\n",
              "      <td>11.01</td>\n",
              "      <td>3.28</td>\n",
              "      <td>2.96</td>\n",
              "      <td>33.00</td>\n",
              "      <td>17.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Pokemon Red/Pokemon Blue</td>\n",
              "      <td>GB</td>\n",
              "      <td>1996</td>\n",
              "      <td>Role-Playing</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>11.27</td>\n",
              "      <td>8.89</td>\n",
              "      <td>10.22</td>\n",
              "      <td>1.00</td>\n",
              "      <td>31.37</td>\n",
              "      <td>20.11</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   rank                      name  ... global_sales  sales_without_na\n",
              "0     1                Wii Sports  ...        82.74             41.25\n",
              "1     2         Super Mario Bros.  ...        40.24             11.16\n",
              "2     3            Mario Kart Wii  ...        35.82             19.98\n",
              "3     4         Wii Sports Resort  ...        33.00             17.25\n",
              "4     5  Pokemon Red/Pokemon Blue  ...        31.37             20.11\n",
              "\n",
              "[5 rows x 12 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "jGHBgNywQAhM",
        "outputId": "655a344c-1495-43c7-d010-53893fede5c4"
      },
      "source": [
        "df_genre_by_region = df.groupby('genre').sum()\n",
        "df_genre_by_region.head()"
      ],
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>rank</th>\n",
              "      <th>year</th>\n",
              "      <th>na_sales</th>\n",
              "      <th>eu_sales</th>\n",
              "      <th>jp_sales</th>\n",
              "      <th>other_sales</th>\n",
              "      <th>global_sales</th>\n",
              "      <th>sales_without_na</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>genre</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Action</th>\n",
              "      <td>25955792</td>\n",
              "      <td>6527703</td>\n",
              "      <td>861.77</td>\n",
              "      <td>516.48</td>\n",
              "      <td>158.65</td>\n",
              "      <td>184.92</td>\n",
              "      <td>1722.84</td>\n",
              "      <td>860.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Adventure</th>\n",
              "      <td>14704318</td>\n",
              "      <td>2558355</td>\n",
              "      <td>101.93</td>\n",
              "      <td>63.74</td>\n",
              "      <td>51.99</td>\n",
              "      <td>16.70</td>\n",
              "      <td>234.59</td>\n",
              "      <td>132.43</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Fighting</th>\n",
              "      <td>6371780</td>\n",
              "      <td>1675871</td>\n",
              "      <td>220.74</td>\n",
              "      <td>100.00</td>\n",
              "      <td>87.15</td>\n",
              "      <td>36.19</td>\n",
              "      <td>444.05</td>\n",
              "      <td>223.34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Misc</th>\n",
              "      <td>14445141</td>\n",
              "      <td>3384308</td>\n",
              "      <td>396.92</td>\n",
              "      <td>211.77</td>\n",
              "      <td>106.67</td>\n",
              "      <td>73.92</td>\n",
              "      <td>789.87</td>\n",
              "      <td>392.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Platform</th>\n",
              "      <td>6019939</td>\n",
              "      <td>1753335</td>\n",
              "      <td>445.99</td>\n",
              "      <td>200.65</td>\n",
              "      <td>130.65</td>\n",
              "      <td>51.51</td>\n",
              "      <td>829.13</td>\n",
              "      <td>382.81</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "               rank     year  ...  global_sales  sales_without_na\n",
              "genre                         ...                                \n",
              "Action     25955792  6527703  ...       1722.84            860.05\n",
              "Adventure  14704318  2558355  ...        234.59            132.43\n",
              "Fighting    6371780  1675871  ...        444.05            223.34\n",
              "Misc       14445141  3384308  ...        789.87            392.36\n",
              "Platform    6019939  1753335  ...        829.13            382.81\n",
              "\n",
              "[5 rows x 8 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 592
        },
        "id": "ysSued8KTSW9",
        "outputId": "60041fd3-890c-4375-9289-1ed3a32790c3"
      },
      "source": [
        "df_genre_by_region[['na_sales','eu_sales', 'jp_sales', 'other_sales']].plot.barh(figsize=(15,10))\n",
        "plt.show()"
      ],
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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cuRInnvuOTZv3szo0aM54IADuOeee2hpadlt3PTp0/na175Gc3MzABs3buTVV1994/yXXXYZs2bN4oknnuj+C+8kV0olSZIkDSy9/AqX4447juuuu47TTz+dHTt2MGTIEP7hH/6BG264gbPOOouRI0dSW1vLli1b9jjHnDlz2LRpE5nJaaedRnV1NVdeeSXnnnsud999N2eccQYHHXTQbuNmzZpFU1MTEyZMIDMZOXIkS5cuZfny5dx4440MGTKE4cOHc/fdXXpkTreKzCx28oGktrY22990LEmSJKnnbdiwgXHjxpUuY0Dp6DePiPrMrG3f1+27kiRJkqRi3L4rSZIkSfuJ66+/nsWLF+/Sdt555zF37txCFfU8Q6kkSZIk7Sfmzp3brwNoR9y+K0mSJEkqxlAqSZIkSSrGUCpJkiRJKsZQKkmSJEkqxgcdSZIkSRpQxt81vlvna5jZ8KZ9Tj75ZFasWNGt521r3rx5DB8+nM985jM9do6e4kqpJEmSJPWwngykfZ2hVJIkSZJ62PDhw1m+fDnTpk3jzDPP5JhjjuGKK65gx44dHfZvaWmhrq6Oqqoqxo8fzxe/+EUAbrvtNiZNmkR1dTXnnnsur7322m5jn3rqKc444wwmTpzI1KlTefLJJwFYvHgxVVVVVFdXM23atJ672C4ylEqSJElSL3n88cdZsGABP/vZz3jqqae47777Ouy3Zs0afvGLX9DY2EhDQwOXXHIJADNmzGDVqlWsXbuWcePGcfvtt+82dvbs2SxYsID6+npuuukmrrzySgDmz5/PQw89xNq1a3nggQd67iK7yFAqSZIkSb3kxBNP5H3vex+DBg3iwgsv5Ic//GGH/d73vvfxb//2b1x99dU8+OCDvPOd7wSgsbGRqVOnMn78eBYtWsT69et3GbdlyxZWrFjBeeedR01NDZdffjkvvPACAFOmTKGuro7bbruNlpaWnr3QLvBBR5IkSZLUSyJir993ete73sXatWt56KGHWLhwId/61re44447qKurY+nSpVRXV3PnnXeyfPnyXcbt2LGDgw8+mDVr1uw258KFC1m5ciXLli1j4sSJ1NfXc8ghh3Tbte0rV0olSZIkqZc8/vjjPP300+zYsYN7772XD3zgAx32e/HFF9mxYwfnnnsu1113HU888QQAr7zyCqNHj6a5uZlFixbtNu6d73wn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\n",
            "text/plain": [
              "<Figure size 1080x720 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "GxzlvYbtiejV"
      },
      "source": [
        "### Observação \n",
        "\n",
        "Trechos comentados não rodaram no collab devido ao custo computacional, rodar localmente para comparar distancia entre titulos de jogos."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IBvZr2N3Tts6"
      },
      "source": [
        "df.name = df.name.str.lower()"
      ],
      "execution_count": 49,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HBxXtr1AWoIJ"
      },
      "source": [
        "df.name = df.name.str.replace(' ', '_')"
      ],
      "execution_count": 50,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OF0XTt0gXtSw",
        "outputId": "fb5d3027-b726-44da-8300-49d8cb03fd9e"
      },
      "source": [
        "!pip install unidecode"
      ],
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting unidecode\n",
            "  Downloading Unidecode-1.3.2-py3-none-any.whl (235 kB)\n",
            "\u001b[?25l\r\u001b[K     |█▍                              | 10 kB 21.0 MB/s eta 0:00:01\r\u001b[K     |██▉                             | 20 kB 26.6 MB/s eta 0:00:01\r\u001b[K     |████▏                           | 30 kB 11.9 MB/s eta 0:00:01\r\u001b[K     |█████▋                          | 40 kB 9.4 MB/s eta 0:00:01\r\u001b[K     |███████                         | 51 kB 5.1 MB/s eta 0:00:01\r\u001b[K     |████████▍                       | 61 kB 5.6 MB/s eta 0:00:01\r\u001b[K     |█████████▊                      | 71 kB 5.4 MB/s eta 0:00:01\r\u001b[K     |███████████▏                    | 81 kB 6.1 MB/s eta 0:00:01\r\u001b[K     |████████████▌                   | 92 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████                  | 102 kB 5.0 MB/s eta 0:00:01\r\u001b[K     |███████████████▎                | 112 kB 5.0 MB/s eta 0:00:01\r\u001b[K     |████████████████▊               | 122 kB 5.0 MB/s eta 0:00:01\r\u001b[K     |██████████████████              | 133 kB 5.0 MB/s eta 0:00:01\r\u001b[K     |███████████████████▌            | 143 kB 5.0 MB/s eta 0:00:01\r\u001b[K     |████████████████████▉           | 153 kB 5.0 MB/s eta 0:00:01\r\u001b[K     |██████████████████████▎         | 163 kB 5.0 MB/s eta 0:00:01\r\u001b[K     |███████████████████████▋        | 174 kB 5.0 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████       | 184 kB 5.0 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▍     | 194 kB 5.0 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▉    | 204 kB 5.0 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▏  | 215 kB 5.0 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▋ | 225 kB 5.0 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 235 kB 5.0 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 235 kB 5.0 MB/s \n",
            "\u001b[?25hInstalling collected packages: unidecode\n",
            "Successfully installed unidecode-1.3.2\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "da8MsqaqXq7P"
      },
      "source": [
        "import unidecode"
      ],
      "execution_count": 52,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "W2bT-AQVXRqg"
      },
      "source": [
        "df.name = df.name.apply(unidecode.unidecode)"
      ],
      "execution_count": 53,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "t3CsBgetZmwf",
        "outputId": "fa715f19-0939-4e49-8dae-8a5cb14d02db"
      },
      "source": [
        "df_1 = df[['name']]\n",
        "df_2 = df[['name']]\n",
        "df_1['key'] = 0\n",
        "df_2['key'] = 0"
      ],
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  This is separate from the ipykernel package so we can avoid doing imports until\n",
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:4: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  after removing the cwd from sys.path.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "L6KeSAy3XoaI"
      },
      "source": [
        "# Executar Localmente\n",
        "## df_matrix = df_2.merge(df_1, how='outer', on='key', validate='many_to_many', suffixes=('x_','y_'))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aW7LFywAYuuY"
      },
      "source": [
        "# df_matrix.groupby('name').count()\n",
        "# JACCARD \n",
        "# def minhash(input_question, compare_question):\n",
        "#     score = 0.0\n",
        "#     shingles = lambda s: set(s[i:i+3] for i in range(len(s)-2))\n",
        "#     jaccard_distance = lambda seta, setb: len(seta & setb)/float(len(seta | setb))\n",
        "#     try:\n",
        "#         score = jaccard_distance(shingles(input_question), shingles(compare_question))\n",
        "#     except ZeroDivisionError:\n",
        "#         print('ZeroDivisionError')\n",
        "\n",
        "#     return score\n",
        "\n",
        "# df['score'] = df.apply(lambda x: minhash(x.x_name, y_name))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kRjnMUMCZP_H",
        "outputId": "165fda71-19e8-45d3-933c-1e868a2ce8df"
      },
      "source": [
        "for col in ['na_sales', 'eu_sales', 'jp_sales', 'other_sales']:\n",
        "  print(col)\n",
        "  print(df[df[col]==df[col].min()].head(1))"
      ],
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "na_sales\n",
            "     rank                      name  ... global_sales  sales_without_na\n",
            "214   215  monster_hunter_freedom_3  ...         4.87              4.87\n",
            "\n",
            "[1 rows x 12 columns]\n",
            "eu_sales\n",
            "     rank               name  ... global_sales  sales_without_na\n",
            "147   148  final_fantasy_xii  ...         5.95              4.07\n",
            "\n",
            "[1 rows x 12 columns]\n",
            "jp_sales\n",
            "    rank          name platform  ...  other_sales global_sales sales_without_na\n",
            "60    61  just_dance_3      Wii  ...         1.07        10.26             4.22\n",
            "\n",
            "[1 rows x 12 columns]\n",
            "other_sales\n",
            "     rank               name  ... global_sales  sales_without_na\n",
            "137   138  world_of_warcraft  ...         6.28              6.21\n",
            "\n",
            "[1 rows x 12 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kc67ORIPcssG"
      },
      "source": [
        "#Conclusões\n",
        "\n",
        "- Existem jogos que venderam mais em plataformas mais difundidas\n",
        "- plataformas que venderam aparelhos junto com o jogo atrapalham na contagem\n",
        "- Jogos de estratégia não vendem bem fora do Japão\n",
        "- O mercado Norte Americano é sempre o que mais compra em todas as categorias. Em especial, os de ação."
      ]
    }
  ]
}